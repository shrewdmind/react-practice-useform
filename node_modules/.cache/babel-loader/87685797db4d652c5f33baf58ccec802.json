{"ast":null,"code":"var _jsxFileName = \"/Users/dami-d/Documents/repos/psn-project/frontend/react-events/01-starting-setup/src/components/Expenses/ExpensesChart.jsx\";\nimport { Chart } from \"../Chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpensesChart = props => {\n  const chartDataPoints = [{\n    label: 'Jan',\n    value: 0\n  }, {\n    label: 'Feb',\n    value: 0\n  }, {\n    label: 'Mar',\n    value: 0\n  }, {\n    label: 'Apr',\n    value: 0\n  }, {\n    label: 'May',\n    value: 0\n  }, {\n    label: 'Jun',\n    value: 0\n  }, {\n    label: 'Jul',\n    value: 0\n  }, {\n    label: 'Aug',\n    value: 0\n  }, {\n    label: 'Sep',\n    value: 0\n  }, {\n    label: 'Oct',\n    value: 0\n  }, {\n    label: 'Nov',\n    value: 0\n  }, {\n    label: 'Dec',\n    value: 0\n  }];\n  for (const exp of props.expenses) {\n    const expMonth = exp.date.getMonth().toString();\n    chartDataPoints[expMonth].value += exp.amount;\n  }\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: chartDataPoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_c = ExpensesChart;\nexport default ExpensesChart;\nvar _c;\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"names":["Chart","ExpensesChart","props","chartDataPoints","label","value","exp","expenses","expMonth","date","getMonth","toString","amount"],"sources":["/Users/dami-d/Documents/repos/psn-project/frontend/react-events/01-starting-setup/src/components/Expenses/ExpensesChart.jsx"],"sourcesContent":["import { Chart } from \"../Chart/Chart\";\n\nconst ExpensesChart = props => {\n    const chartDataPoints = [\n        { label: 'Jan', value: 0 },\n        { label: 'Feb', value: 0 },\n        { label: 'Mar', value: 0 },\n        { label: 'Apr', value: 0 },\n        { label: 'May', value: 0 },\n        { label: 'Jun', value: 0 },\n        { label: 'Jul', value: 0 },\n        { label: 'Aug', value: 0 },\n        { label: 'Sep', value: 0 },\n        { label: 'Oct', value: 0 },\n        { label: 'Nov', value: 0 },\n        { label: 'Dec', value: 0 }\n    ];\n\n    for (const exp of props.expenses) {\n        const expMonth = exp.date.getMonth().toString();\n        chartDataPoints[expMonth].value += exp.amount;\n    }\n\n    return (\n        <Chart dataPoints={chartDataPoints}/>\n    )\n};\n\nexport default ExpensesChart;"],"mappings":";AAAA,SAASA,KAAK,QAAQ,gBAAgB;AAAC;AAEvC,MAAMC,aAAa,GAAGC,KAAK,IAAI;EAC3B,MAAMC,eAAe,GAAG,CACpB;IAAEC,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,CAC7B;EAED,KAAK,MAAMC,GAAG,IAAIJ,KAAK,CAACK,QAAQ,EAAE;IAC9B,MAAMC,QAAQ,GAAGF,GAAG,CAACG,IAAI,CAACC,QAAQ,EAAE,CAACC,QAAQ,EAAE;IAC/CR,eAAe,CAACK,QAAQ,CAAC,CAACH,KAAK,IAAIC,GAAG,CAACM,MAAM;EACjD;EAEA,oBACI,QAAC,KAAK;IAAC,UAAU,EAAET;EAAgB;IAAA;IAAA;IAAA;EAAA,QAAE;AAE7C,CAAC;AAAC,KAxBIF,aAAa;AA0BnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module"}